!(function (Q) {
  var U = window.webpackHotUpdate
  window.webpackHotUpdate = function (Q, F) {
    !(function (Q, U) {
      if (!S[Q] || !C[Q]) return
      for (var F in ((C[Q] = !1), U)) Object.prototype.hasOwnProperty.call(U, F) && (d[F] = U[F])
      0 == --a && 0 === L && R()
    })(Q, F),
      U && U(Q, F)
  }
  var F,
    B = !0,
    n = 'b410691528cd4b45e913',
    s = {},
    e = [],
    t = []
  function l(Q) {
    var U = N[Q]
    if (!U) return m
    var B = function (B) {
        return (
          U.hot.active
            ? (N[B] ? -1 === N[B].parents.indexOf(Q) && N[B].parents.push(Q) : ((e = [Q]), (F = B)),
              -1 === U.children.indexOf(B) && U.children.push(B))
            : (console.warn('[HMR] unexpected require(' + B + ') from disposed module ' + Q),
              (e = [])),
          m(B)
        )
      },
      n = function (Q) {
        return {
          configurable: !0,
          enumerable: !0,
          get: function () {
            return m[Q]
          },
          set: function (U) {
            m[Q] = U
          }
        }
      }
    for (var s in m)
      Object.prototype.hasOwnProperty.call(m, s) &&
        'e' !== s &&
        't' !== s &&
        Object.defineProperty(B, s, n(s))
    return (
      (B.e = function (Q) {
        return (
          'ready' === g && i('prepare'),
          L++,
          m.e(Q).then(U, function (Q) {
            throw (U(), Q)
          })
        )
        function U() {
          L--, 'prepare' === g && (o[Q] || y(Q), 0 === L && 0 === a && R())
        }
      }),
      (B.t = function (Q, U) {
        return 1 & U && (Q = B(Q)), m.t(Q, -2 & U)
      }),
      B
    )
  }
  function r(U) {
    var B = {
      _acceptedDependencies: {},
      _declinedDependencies: {},
      _selfAccepted: !1,
      _selfDeclined: !1,
      _selfInvalidated: !1,
      _disposeHandlers: [],
      _main: F !== U,
      active: !0,
      accept: function (Q, U) {
        if (void 0 === Q) B._selfAccepted = !0
        else if ('function' == typeof Q) B._selfAccepted = Q
        else if ('object' == typeof Q)
          for (var F = 0; F < Q.length; F++) B._acceptedDependencies[Q[F]] = U || function () {}
        else B._acceptedDependencies[Q] = U || function () {}
      },
      decline: function (Q) {
        if (void 0 === Q) B._selfDeclined = !0
        else if ('object' == typeof Q)
          for (var U = 0; U < Q.length; U++) B._declinedDependencies[Q[U]] = !0
        else B._declinedDependencies[Q] = !0
      },
      dispose: function (Q) {
        B._disposeHandlers.push(Q)
      },
      addDisposeHandler: function (Q) {
        B._disposeHandlers.push(Q)
      },
      removeDisposeHandler: function (Q) {
        var U = B._disposeHandlers.indexOf(Q)
        U >= 0 && B._disposeHandlers.splice(U, 1)
      },
      invalidate: function () {
        switch (((this._selfInvalidated = !0), g)) {
          case 'idle':
            ;((d = {})[U] = Q[U]), i('ready')
            break
          case 'ready':
            Z(U)
            break
          case 'prepare':
          case 'check':
          case 'dispose':
          case 'apply':
            ;(b = b || []).push(U)
        }
      },
      check: u,
      apply: E,
      status: function (Q) {
        if (!Q) return g
        c.push(Q)
      },
      addStatusHandler: function (Q) {
        c.push(Q)
      },
      removeStatusHandler: function (Q) {
        var U = c.indexOf(Q)
        U >= 0 && c.splice(U, 1)
      },
      data: s[U]
    }
    return (F = void 0), B
  }
  var c = [],
    g = 'idle'
  function i(Q) {
    g = Q
    for (var U = 0; U < c.length; U++) c[U].call(null, Q)
  }
  var I,
    d,
    x,
    b,
    a = 0,
    L = 0,
    o = {},
    C = {},
    S = {}
  function G(Q) {
    return +Q + '' === Q ? +Q : Q
  }
  function u(Q) {
    if ('idle' !== g) throw new Error('check() is only allowed in idle status')
    return (
      (B = Q),
      i('check'),
      ((U = 1e4),
      (U = U || 1e4),
      new Promise(function (Q, F) {
        if ('undefined' == typeof XMLHttpRequest) return F(new Error('No browser support'))
        try {
          var B = new XMLHttpRequest(),
            s = m.p + '' + n + '.hot-update.json'
          B.open('GET', s, !0), (B.timeout = U), B.send(null)
        } catch (Q) {
          return F(Q)
        }
        B.onreadystatechange = function () {
          if (4 === B.readyState)
            if (0 === B.status) F(new Error('Manifest request to ' + s + ' timed out.'))
            else if (404 === B.status) Q()
            else if (200 !== B.status && 304 !== B.status)
              F(new Error('Manifest request to ' + s + ' failed.'))
            else {
              try {
                var U = JSON.parse(B.responseText)
              } catch (Q) {
                return void F(Q)
              }
              Q(U)
            }
        }
      })).then(function (Q) {
        if (!Q) return i(V() ? 'ready' : 'idle'), null
        ;(C = {}), (o = {}), (S = Q.c), (x = Q.h), i('prepare')
        var U = new Promise(function (Q, U) {
          I = { resolve: Q, reject: U }
        })
        d = {}
        return y(1), 'prepare' === g && 0 === L && 0 === a && R(), U
      })
    )
    var U
  }
  function y(Q) {
    S[Q]
      ? ((C[Q] = !0),
        a++,
        (function (Q) {
          var U = document.createElement('script')
          ;(U.charset = 'utf-8'),
            (U.src = m.p + '' + Q + '.' + n + '.hot-update.js'),
            document.head.appendChild(U)
        })(Q))
      : (o[Q] = !0)
  }
  function R() {
    i('ready')
    var Q = I
    if (((I = null), Q))
      if (B)
        Promise.resolve()
          .then(function () {
            return E(B)
          })
          .then(
            function (U) {
              Q.resolve(U)
            },
            function (U) {
              Q.reject(U)
            }
          )
      else {
        var U = []
        for (var F in d) Object.prototype.hasOwnProperty.call(d, F) && U.push(G(F))
        Q.resolve(U)
      }
  }
  function E(U) {
    if ('ready' !== g) throw new Error('apply() is only allowed in ready status')
    return (function U(B) {
      var t, l, r, c, g
      function I(Q) {
        for (
          var U = [Q],
            F = {},
            B = U.map(function (Q) {
              return { chain: [Q], id: Q }
            });
          B.length > 0;

        ) {
          var n = B.pop(),
            s = n.id,
            e = n.chain
          if ((c = N[s]) && (!c.hot._selfAccepted || c.hot._selfInvalidated)) {
            if (c.hot._selfDeclined) return { type: 'self-declined', chain: e, moduleId: s }
            if (c.hot._main) return { type: 'unaccepted', chain: e, moduleId: s }
            for (var t = 0; t < c.parents.length; t++) {
              var l = c.parents[t],
                r = N[l]
              if (r) {
                if (r.hot._declinedDependencies[s])
                  return { type: 'declined', chain: e.concat([l]), moduleId: s, parentId: l }
                ;-1 === U.indexOf(l) &&
                  (r.hot._acceptedDependencies[s]
                    ? (F[l] || (F[l] = []), a(F[l], [s]))
                    : (delete F[l], U.push(l), B.push({ chain: e.concat([l]), id: l })))
              }
            }
          }
        }
        return { type: 'accepted', moduleId: Q, outdatedModules: U, outdatedDependencies: F }
      }
      function a(Q, U) {
        for (var F = 0; F < U.length; F++) {
          var B = U[F]
          ;-1 === Q.indexOf(B) && Q.push(B)
        }
      }
      V()
      var L = {},
        o = [],
        C = {},
        u = function () {
          console.warn('[HMR] unexpected require(' + R.moduleId + ') to disposed module')
        }
      for (var y in d)
        if (Object.prototype.hasOwnProperty.call(d, y)) {
          var R
          ;(g = G(y)), (R = d[y] ? I(g) : { type: 'disposed', moduleId: y })
          var E = !1,
            Z = !1,
            p = !1,
            W = ''
          switch ((R.chain && (W = '\nUpdate propagation: ' + R.chain.join(' -> ')), R.type)) {
            case 'self-declined':
              B.onDeclined && B.onDeclined(R),
                B.ignoreDeclined ||
                  (E = new Error('Aborted because of self decline: ' + R.moduleId + W))
              break
            case 'declined':
              B.onDeclined && B.onDeclined(R),
                B.ignoreDeclined ||
                  (E = new Error(
                    'Aborted because of declined dependency: ' +
                      R.moduleId +
                      ' in ' +
                      R.parentId +
                      W
                  ))
              break
            case 'unaccepted':
              B.onUnaccepted && B.onUnaccepted(R),
                B.ignoreUnaccepted ||
                  (E = new Error('Aborted because ' + g + ' is not accepted' + W))
              break
            case 'accepted':
              B.onAccepted && B.onAccepted(R), (Z = !0)
              break
            case 'disposed':
              B.onDisposed && B.onDisposed(R), (p = !0)
              break
            default:
              throw new Error('Unexception type ' + R.type)
          }
          if (E) return i('abort'), Promise.reject(E)
          if (Z)
            for (g in ((C[g] = d[g]), a(o, R.outdatedModules), R.outdatedDependencies))
              Object.prototype.hasOwnProperty.call(R.outdatedDependencies, g) &&
                (L[g] || (L[g] = []), a(L[g], R.outdatedDependencies[g]))
          p && (a(o, [R.moduleId]), (C[g] = u))
        }
      var D,
        A = []
      for (l = 0; l < o.length; l++)
        (g = o[l]),
          N[g] &&
            N[g].hot._selfAccepted &&
            C[g] !== u &&
            !N[g].hot._selfInvalidated &&
            A.push({
              module: g,
              parents: N[g].parents.slice(),
              errorHandler: N[g].hot._selfAccepted
            })
      i('dispose'),
        Object.keys(S).forEach(function (Q) {
          !1 === S[Q] &&
            (function (Q) {
              delete installedChunks[Q]
            })(Q)
        })
      var X,
        h,
        v = o.slice()
      for (; v.length > 0; )
        if (((g = v.pop()), (c = N[g]))) {
          var H = {},
            J = c.hot._disposeHandlers
          for (r = 0; r < J.length; r++) (t = J[r])(H)
          for (
            s[g] = H, c.hot.active = !1, delete N[g], delete L[g], r = 0;
            r < c.children.length;
            r++
          ) {
            var M = N[c.children[r]]
            M && (D = M.parents.indexOf(g)) >= 0 && M.parents.splice(D, 1)
          }
        }
      for (g in L)
        if (Object.prototype.hasOwnProperty.call(L, g) && (c = N[g]))
          for (h = L[g], r = 0; r < h.length; r++)
            (X = h[r]), (D = c.children.indexOf(X)) >= 0 && c.children.splice(D, 1)
      i('apply'), void 0 !== x && ((n = x), (x = void 0))
      for (g in ((d = void 0), C)) Object.prototype.hasOwnProperty.call(C, g) && (Q[g] = C[g])
      var T = null
      for (g in L)
        if (Object.prototype.hasOwnProperty.call(L, g) && (c = N[g])) {
          h = L[g]
          var Y = []
          for (l = 0; l < h.length; l++)
            if (((X = h[l]), (t = c.hot._acceptedDependencies[X]))) {
              if (-1 !== Y.indexOf(t)) continue
              Y.push(t)
            }
          for (l = 0; l < Y.length; l++) {
            t = Y[l]
            try {
              t(h)
            } catch (Q) {
              B.onErrored &&
                B.onErrored({ type: 'accept-errored', moduleId: g, dependencyId: h[l], error: Q }),
                B.ignoreErrored || T || (T = Q)
            }
          }
        }
      for (l = 0; l < A.length; l++) {
        var z = A[l]
        ;(g = z.module), (e = z.parents), (F = g)
        try {
          m(g)
        } catch (Q) {
          if ('function' == typeof z.errorHandler)
            try {
              z.errorHandler(Q)
            } catch (U) {
              B.onErrored &&
                B.onErrored({
                  type: 'self-accept-error-handler-errored',
                  moduleId: g,
                  error: U,
                  originalError: Q
                }),
                B.ignoreErrored || T || (T = U),
                T || (T = Q)
            }
          else
            B.onErrored && B.onErrored({ type: 'self-accept-errored', moduleId: g, error: Q }),
              B.ignoreErrored || T || (T = Q)
        }
      }
      if (T) return i('fail'), Promise.reject(T)
      if (b)
        return U(B).then(function (Q) {
          return (
            o.forEach(function (U) {
              Q.indexOf(U) < 0 && Q.push(U)
            }),
            Q
          )
        })
      return (
        i('idle'),
        new Promise(function (Q) {
          Q(o)
        })
      )
    })((U = U || {}))
  }
  function V() {
    if (b) return d || (d = {}), b.forEach(Z), (b = void 0), !0
  }
  function Z(U) {
    Object.prototype.hasOwnProperty.call(d, U) || (d[U] = Q[U])
  }
  var N = {}
  function m(U) {
    if (N[U]) return N[U].exports
    var F = (N[U] = {
      i: U,
      l: !1,
      exports: {},
      hot: r(U),
      parents: ((t = e), (e = []), t),
      children: []
    })
    return Q[U].call(F.exports, F, F.exports, l(U)), (F.l = !0), F.exports
  }
  ;(m.m = Q),
    (m.c = N),
    (m.d = function (Q, U, F) {
      m.o(Q, U) || Object.defineProperty(Q, U, { enumerable: !0, get: F })
    }),
    (m.r = function (Q) {
      'undefined' != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(Q, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(Q, '__esModule', { value: !0 })
    }),
    (m.t = function (Q, U) {
      if ((1 & U && (Q = m(Q)), 8 & U)) return Q
      if (4 & U && 'object' == typeof Q && Q && Q.__esModule) return Q
      var F = Object.create(null)
      if (
        (m.r(F),
        Object.defineProperty(F, 'default', { enumerable: !0, value: Q }),
        2 & U && 'string' != typeof Q)
      )
        for (var B in Q)
          m.d(
            F,
            B,
            function (U) {
              return Q[U]
            }.bind(null, B)
          )
      return F
    }),
    (m.n = function (Q) {
      var U =
        Q && Q.__esModule
          ? function () {
              return Q.default
            }
          : function () {
              return Q
            }
      return m.d(U, 'a', U), U
    }),
    (m.o = function (Q, U) {
      return Object.prototype.hasOwnProperty.call(Q, U)
    }),
    (m.p = ''),
    (m.h = function () {
      return n
    }),
    l(4)((m.s = 4))
})([
  ,
  function (module, __webpack_exports__, __webpack_require__) {
    'use strict'
    eval(
      "\n// EXTERNAL MODULE: ./src/polyfills.js\nvar polyfills = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/pointers.ts\n/**\r\n * Utilites for working with multiple pointer events\r\n */\r\nfunction findEventIndex(pointers, event) {\r\n    var i = pointers.length;\r\n    while (i--) {\r\n        if (pointers[i].pointerId === event.pointerId) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nfunction addPointer(pointers, event) {\r\n    var i;\r\n    // Add touches if applicable\r\n    if (event.touches) {\r\n        i = 0;\r\n        for (var _i = 0, _a = event.touches; _i < _a.length; _i++) {\r\n            var touch = _a[_i];\r\n            touch.pointerId = i++;\r\n            addPointer(pointers, touch);\r\n        }\r\n        return;\r\n    }\r\n    i = findEventIndex(pointers, event);\r\n    // Update if already present\r\n    if (i > -1) {\r\n        pointers.splice(i, 1);\r\n    }\r\n    pointers.push(event);\r\n}\r\nfunction removePointer(pointers, event) {\r\n    // Add touches if applicable\r\n    if (event.touches) {\r\n        // Remove all touches\r\n        while (pointers.length) {\r\n            pointers.pop();\r\n        }\r\n        return;\r\n    }\r\n    var i = findEventIndex(pointers, event);\r\n    if (i > -1) {\r\n        pointers.splice(i, 1);\r\n    }\r\n}\r\n/**\r\n * Calculates a center point between\r\n * the given pointer events, for panning\r\n * with multiple pointers.\r\n */\r\nfunction getMiddle(pointers) {\r\n    // Copy to avoid changing by reference\r\n    pointers = pointers.slice(0);\r\n    var event1 = pointers.pop();\r\n    var event2;\r\n    while ((event2 = pointers.pop())) {\r\n        event1 = {\r\n            clientX: (event2.clientX - event1.clientX) / 2 + event1.clientX,\r\n            clientY: (event2.clientY - event1.clientY) / 2 + event1.clientY\r\n        };\r\n    }\r\n    return event1;\r\n}\r\n/**\r\n * Calculates the distance between two points\r\n * for pinch zooming.\r\n * Limits to the first 2\r\n */\r\nfunction getDistance(pointers) {\r\n    if (pointers.length < 2) {\r\n        return 0;\r\n    }\r\n    var event1 = pointers[0];\r\n    var event2 = pointers[1];\r\n    return Math.sqrt(Math.pow(Math.abs(event2.clientX - event1.clientX), 2) +\r\n        Math.pow(Math.abs(event2.clientY - event1.clientY), 2));\r\n}\r\n\n// CONCATENATED MODULE: ./src/events.ts\nvar events = {\r\n    down: 'mousedown',\r\n    move: 'mousemove',\r\n    up: 'mouseup mouseleave'\r\n};\r\nif (typeof window !== 'undefined') {\r\n    if (typeof window.PointerEvent === 'function') {\r\n        events = {\r\n            down: 'pointerdown',\r\n            move: 'pointermove',\r\n            up: 'pointerup pointerleave pointercancel'\r\n        };\r\n    }\r\n    else if (typeof window.TouchEvent === 'function') {\r\n        events = {\r\n            down: 'touchstart',\r\n            move: 'touchmove',\r\n            up: 'touchend touchcancel'\r\n        };\r\n    }\r\n}\r\n\r\nfunction onPointer(event, elem, handler, eventOpts) {\r\n    events[event].split(' ').forEach(function (name) {\r\n        ;\r\n        elem.addEventListener(name, handler, eventOpts);\r\n    });\r\n}\r\nfunction destroyPointer(event, elem, handler) {\r\n    events[event].split(' ').forEach(function (name) {\r\n        ;\r\n        elem.removeEventListener(name, handler);\r\n    });\r\n}\r\n\n// CONCATENATED MODULE: ./src/css.ts\nvar isIE = typeof document !== 'undefined' && !!document.documentMode;\r\n/**\r\n * Lazy creation of a CSS style declaration\r\n */\r\nvar divStyle;\r\nfunction createStyle() {\r\n    if (divStyle) {\r\n        return divStyle;\r\n    }\r\n    return (divStyle = document.createElement('div').style);\r\n}\r\n/**\r\n * Proper prefixing for cross-browser compatibility\r\n */\r\nvar prefixes = ['webkit', 'moz', 'ms'];\r\nvar prefixCache = {};\r\nfunction getPrefixedName(name) {\r\n    if (prefixCache[name]) {\r\n        return prefixCache[name];\r\n    }\r\n    var divStyle = createStyle();\r\n    if (name in divStyle) {\r\n        return (prefixCache[name] = name);\r\n    }\r\n    var capName = name[0].toUpperCase() + name.slice(1);\r\n    var i = prefixes.length;\r\n    while (i--) {\r\n        var prefixedName = \"\" + prefixes[i] + capName;\r\n        if (prefixedName in divStyle) {\r\n            return (prefixCache[name] = prefixedName);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets a style value expected to be a number\r\n */\r\nfunction getCSSNum(name, style) {\r\n    return parseFloat(style[getPrefixedName(name)]) || 0;\r\n}\r\nfunction getBoxStyle(elem, name, style) {\r\n    if (style === void 0) { style = window.getComputedStyle(elem); }\r\n    // Support: FF 68+\r\n    // Firefox requires specificity for border\r\n    var suffix = name === 'border' ? 'Width' : '';\r\n    return {\r\n        left: getCSSNum(name + \"Left\" + suffix, style),\r\n        right: getCSSNum(name + \"Right\" + suffix, style),\r\n        top: getCSSNum(name + \"Top\" + suffix, style),\r\n        bottom: getCSSNum(name + \"Bottom\" + suffix, style)\r\n    };\r\n}\r\n/**\r\n * Set a style using the properly prefixed name\r\n */\r\nfunction setStyle(elem, name, value) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    elem.style[getPrefixedName(name)] = value;\r\n}\r\n/**\r\n * Constructs the transition from panzoom options\r\n * and takes care of prefixing the transition and transform\r\n */\r\nfunction setTransition(elem, options) {\r\n    var transform = getPrefixedName('transform');\r\n    setStyle(elem, 'transition', transform + \" \" + options.duration + \"ms \" + options.easing);\r\n}\r\n/**\r\n * Set the transform using the proper prefix\r\n */\r\nfunction setTransform(elem, _a, _options) {\r\n    var x = _a.x, y = _a.y, scale = _a.scale, isSVG = _a.isSVG;\r\n    setStyle(elem, 'transform', \"scale(\" + scale + \") translate(\" + x + \"px, \" + y + \"px)\");\r\n    if (isSVG && isIE) {\r\n        var matrixValue = window.getComputedStyle(elem).getPropertyValue('transform');\r\n        elem.setAttribute('transform', matrixValue);\r\n    }\r\n}\r\n/**\r\n * Dimensions used in containment and focal point zooming\r\n */\r\nfunction getDimensions(elem) {\r\n    var parent = elem.parentNode;\r\n    var style = window.getComputedStyle(elem);\r\n    var parentStyle = window.getComputedStyle(parent);\r\n    var rectElem = elem.getBoundingClientRect();\r\n    var rectParent = parent.getBoundingClientRect();\r\n    return {\r\n        elem: {\r\n            style: style,\r\n            width: rectElem.width,\r\n            height: rectElem.height,\r\n            top: rectElem.top,\r\n            bottom: rectElem.bottom,\r\n            left: rectElem.left,\r\n            right: rectElem.right,\r\n            margin: getBoxStyle(elem, 'margin', style),\r\n            border: getBoxStyle(elem, 'border', style)\r\n        },\r\n        parent: {\r\n            style: parentStyle,\r\n            width: rectParent.width,\r\n            height: rectParent.height,\r\n            top: rectParent.top,\r\n            bottom: rectParent.bottom,\r\n            left: rectParent.left,\r\n            right: rectParent.right,\r\n            padding: getBoxStyle(parent, 'padding', parentStyle),\r\n            border: getBoxStyle(parent, 'border', parentStyle)\r\n        }\r\n    };\r\n}\r\n\n// CONCATENATED MODULE: ./src/isAttached.ts\n/**\r\n * Determine if an element is attached to the DOM\r\n * Panzoom requires this so events work properly\r\n */\r\nfunction isAttached(elem) {\r\n    var doc = elem.ownerDocument;\r\n    var parent = elem.parentNode;\r\n    return (doc &&\r\n        parent &&\r\n        doc.nodeType === 9 &&\r\n        parent.nodeType === 1 &&\r\n        doc.documentElement.contains(parent));\r\n}\r\n\n// CONCATENATED MODULE: ./src/isExcluded.ts\nfunction getClass(elem) {\r\n    return (elem.getAttribute('class') || '').trim();\r\n}\r\nfunction hasClass(elem, className) {\r\n    return elem.nodeType === 1 && (\" \" + getClass(elem) + \" \").indexOf(\" \" + className + \" \") > -1;\r\n}\r\nfunction isExcluded(elem, options) {\r\n    for (var cur = elem; cur != null; cur = cur.parentNode) {\r\n        if (hasClass(cur, options.excludeClass) || options.exclude.indexOf(cur) > -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\n// CONCATENATED MODULE: ./src/isSVGElement.ts\n/**\r\n * Determine if an element is SVG by checking the namespace\r\n * Exception: the <svg> element itself should be treated like HTML\r\n */\r\nvar rsvg = /^http:[\\w\\.\\/]+svg$/;\r\nfunction isSVGElement(elem) {\r\n    return rsvg.test(elem.namespaceURI) && elem.nodeName.toLowerCase() !== 'svg';\r\n}\r\n\n// CONCATENATED MODULE: ./src/shallowClone.ts\nfunction shallowClone(obj) {\r\n    var clone = {};\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            clone[key] = obj[key];\r\n        }\r\n    }\r\n    return clone;\r\n}\r\n\n// CONCATENATED MODULE: ./src/panzoom.ts\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n/**\r\n * Panzoom for panning and zooming elements using CSS transforms\r\n * https://github.com/timmywil/panzoom\r\n *\r\n * Copyright Timmy Willison and other contributors\r\n * Released under the MIT license\r\n * https://github.com/timmywil/panzoom/blob/master/MIT-License.txt\r\n *\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar defaultOptions = {\r\n    animate: false,\r\n    canvas: false,\r\n    cursor: 'move',\r\n    disablePan: false,\r\n    disableZoom: false,\r\n    disableXAxis: false,\r\n    disableYAxis: false,\r\n    duration: 200,\r\n    easing: 'ease-in-out',\r\n    exclude: [],\r\n    excludeClass: 'panzoom-exclude',\r\n    handleStartEvent: function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    },\r\n    maxScale: 4,\r\n    minScale: 0.125,\r\n    overflow: 'hidden',\r\n    panOnlyWhenZoomed: false,\r\n    relative: false,\r\n    setTransform: setTransform,\r\n    startX: 0,\r\n    startY: 0,\r\n    startScale: 1,\r\n    step: 0.3,\r\n    touchAction: 'none'\r\n};\r\nfunction Panzoom(elem, options) {\r\n    if (!elem) {\r\n        throw new Error('Panzoom requires an element as an argument');\r\n    }\r\n    if (elem.nodeType !== 1) {\r\n        throw new Error('Panzoom requires an element with a nodeType of 1');\r\n    }\r\n    if (!isAttached(elem)) {\r\n        throw new Error('Panzoom should be called on elements that have been attached to the DOM');\r\n    }\r\n    options = __assign(__assign({}, defaultOptions), options);\r\n    var isSVG = isSVGElement(elem);\r\n    var parent = elem.parentNode;\r\n    // Set parent styles\r\n    parent.style.overflow = options.overflow;\r\n    parent.style.userSelect = 'none';\r\n    // This is important for mobile to\r\n    // prevent scrolling while panning\r\n    parent.style.touchAction = options.touchAction;\r\n    (options.canvas ? parent : elem).style.cursor = options.cursor;\r\n    // Set element styles\r\n    elem.style.userSelect = 'none';\r\n    elem.style.touchAction = options.touchAction;\r\n    1; // The default for HTML is '50% 50%'\r\n    // The default for SVG is '0 0'\r\n    // SVG can't be changed in IE\r\n    setStyle(elem, 'transformOrigin', typeof options.origin === 'string' ? options.origin : isSVG ? '0 0' : '50% 50%');\r\n    function setOptions(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        for (var key in opts) {\r\n            if (opts.hasOwnProperty(key)) {\r\n                options[key] = opts[key];\r\n            }\r\n        }\r\n        // Handle option side-effects\r\n        if (opts.hasOwnProperty('cursor')) {\r\n            elem.style.cursor = opts.cursor;\r\n        }\r\n        if (opts.hasOwnProperty('overflow')) {\r\n            parent.style.overflow = opts.overflow;\r\n        }\r\n        if (opts.hasOwnProperty('touchAction')) {\r\n            parent.style.touchAction = opts.touchAction;\r\n            elem.style.touchAction = opts.touchAction;\r\n        }\r\n        if (opts.hasOwnProperty('minScale') ||\r\n            opts.hasOwnProperty('maxScale') ||\r\n            opts.hasOwnProperty('contain')) {\r\n            setMinMax();\r\n        }\r\n    }\r\n    var x = 0;\r\n    var y = 0;\r\n    var scale = 1;\r\n    var isPanning = false;\r\n    zoom(options.startScale, { animate: false });\r\n    // Wait for scale to update\r\n    // for accurate dimensions\r\n    // to constrain initial values\r\n    setTimeout(function () {\r\n        setMinMax();\r\n        pan(options.startX, options.startY, { animate: false });\r\n    });\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function trigger(eventName, detail, opts) {\r\n        if (opts.silent) {\r\n            return;\r\n        }\r\n        var event = new CustomEvent(eventName, { detail: detail });\r\n        elem.dispatchEvent(event);\r\n    }\r\n    function setTransformWithEvent(eventName, opts) {\r\n        var value = { x: x, y: y, scale: scale, isSVG: isSVG };\r\n        requestAnimationFrame(function () {\r\n            if (typeof opts.animate === 'boolean') {\r\n                if (opts.animate) {\r\n                    setTransition(elem, opts);\r\n                }\r\n                else {\r\n                    setStyle(elem, 'transition', 'none');\r\n                }\r\n            }\r\n            opts.setTransform(elem, value, opts);\r\n        });\r\n        trigger(eventName, value, opts);\r\n        trigger('panzoomchange', value, opts);\r\n        return value;\r\n    }\r\n    function setMinMax() {\r\n        if (options.contain) {\r\n            var dims = getDimensions(elem);\r\n            var parentWidth = dims.parent.width - dims.parent.border.left - dims.parent.border.right;\r\n            var parentHeight = dims.parent.height - dims.parent.border.top - dims.parent.border.bottom;\r\n            var elemWidth = dims.elem.width / scale;\r\n            var elemHeight = dims.elem.height / scale;\r\n            var elemScaledWidth = parentWidth / elemWidth;\r\n            var elemScaledHeight = parentHeight / elemHeight;\r\n            if (options.contain === 'inside') {\r\n                options.maxScale = Math.min(elemScaledWidth, elemScaledHeight);\r\n            }\r\n            else if (options.contain === 'outside') {\r\n                options.minScale = Math.max(elemScaledWidth, elemScaledHeight);\r\n            }\r\n        }\r\n    }\r\n    function constrainXY(toX, toY, toScale, panOptions) {\r\n        var opts = __assign(__assign({}, options), panOptions);\r\n        var result = { x: x, y: y, opts: opts };\r\n        if (!opts.force && (opts.disablePan || (opts.panOnlyWhenZoomed && scale === opts.startScale))) {\r\n            return result;\r\n        }\r\n        toX = parseFloat(toX);\r\n        toY = parseFloat(toY);\r\n        if (!opts.disableXAxis) {\r\n            result.x = (opts.relative ? x : 0) + toX;\r\n        }\r\n        if (!opts.disableYAxis) {\r\n            result.y = (opts.relative ? y : 0) + toY;\r\n        }\r\n        if (opts.contain === 'inside') {\r\n            var dims = getDimensions(elem);\r\n            result.x = Math.max(-dims.elem.margin.left - dims.parent.padding.left, Math.min(dims.parent.width -\r\n                dims.elem.width / toScale -\r\n                dims.parent.padding.left -\r\n                dims.elem.margin.left -\r\n                dims.parent.border.left -\r\n                dims.parent.border.right, result.x));\r\n            result.y = Math.max(-dims.elem.margin.top - dims.parent.padding.top, Math.min(dims.parent.height -\r\n                dims.elem.height / toScale -\r\n                dims.parent.padding.top -\r\n                dims.elem.margin.top -\r\n                dims.parent.border.top -\r\n                dims.parent.border.bottom, result.y));\r\n        }\r\n        else if (opts.contain === 'outside') {\r\n            var dims = getDimensions(elem);\r\n            var realWidth = dims.elem.width / scale;\r\n            var realHeight = dims.elem.height / scale;\r\n            var scaledWidth = realWidth * toScale;\r\n            var scaledHeight = realHeight * toScale;\r\n            var diffHorizontal = (scaledWidth - realWidth) / 2;\r\n            var diffVertical = (scaledHeight - realHeight) / 2;\r\n            var minX = (-(scaledWidth - dims.parent.width) -\r\n                dims.parent.padding.left -\r\n                dims.parent.border.left -\r\n                dims.parent.border.right +\r\n                diffHorizontal) /\r\n                toScale;\r\n            var maxX = (diffHorizontal - dims.parent.padding.left) / toScale;\r\n            result.x = Math.max(Math.min(result.x, maxX), minX);\r\n            var minY = (-(scaledHeight - dims.parent.height) -\r\n                dims.parent.padding.top -\r\n                dims.parent.border.top -\r\n                dims.parent.border.bottom +\r\n                diffVertical) /\r\n                toScale;\r\n            var maxY = (diffVertical - dims.parent.padding.top) / toScale;\r\n            result.y = Math.max(Math.min(result.y, maxY), minY);\r\n        }\r\n        return result;\r\n    }\r\n    function constrainScale(toScale, zoomOptions) {\r\n        var opts = __assign(__assign({}, options), zoomOptions);\r\n        var result = { scale: scale, opts: opts };\r\n        if (!opts.force && opts.disableZoom) {\r\n            return result;\r\n        }\r\n        result.scale = Math.min(Math.max(toScale, opts.minScale), opts.maxScale);\r\n        return result;\r\n    }\r\n    function pan(toX, toY, panOptions) {\r\n        var result = constrainXY(toX, toY, scale, panOptions);\r\n        var opts = result.opts;\r\n        x = result.x;\r\n        y = result.y;\r\n        return setTransformWithEvent('panzoompan', opts);\r\n    }\r\n    function zoom(toScale, zoomOptions) {\r\n        var result = constrainScale(toScale, zoomOptions);\r\n        var opts = result.opts;\r\n        if (!opts.force && opts.disableZoom) {\r\n            return;\r\n        }\r\n        toScale = result.scale;\r\n        var toX = x;\r\n        var toY = y;\r\n        if (opts.focal) {\r\n            // The difference between the point after the scale and the point before the scale\r\n            // plus the current translation after the scale\r\n            // neutralized to no scale (as the transform scale will apply to the translation)\r\n            var focal = opts.focal;\r\n            toX = (focal.x / toScale - focal.x / scale + x * toScale) / toScale;\r\n            toY = (focal.y / toScale - focal.y / scale + y * toScale) / toScale;\r\n        }\r\n        var panResult = constrainXY(toX, toY, toScale, { relative: false, force: true });\r\n        x = panResult.x;\r\n        y = panResult.y;\r\n        scale = toScale;\r\n        return setTransformWithEvent('panzoomzoom', opts);\r\n    }\r\n    function zoomInOut(isIn, zoomOptions) {\r\n        var opts = __assign(__assign(__assign({}, options), { animate: true }), zoomOptions);\r\n        return zoom(scale * Math.exp((isIn ? 1 : -1) * opts.step), opts);\r\n    }\r\n    function zoomIn(zoomOptions) {\r\n        return zoomInOut(true, zoomOptions);\r\n    }\r\n    function zoomOut(zoomOptions) {\r\n        return zoomInOut(false, zoomOptions);\r\n    }\r\n    function zoomToPoint(toScale, point, zoomOptions) {\r\n        var dims = getDimensions(elem);\r\n        // Instead of thinking of operating on the panzoom element,\r\n        // think of operating on the area inside the panzoom\r\n        // element's parent\r\n        // Subtract padding and border\r\n        var effectiveArea = {\r\n            width: dims.parent.width -\r\n                dims.parent.padding.left -\r\n                dims.parent.padding.right -\r\n                dims.parent.border.left -\r\n                dims.parent.border.right,\r\n            height: dims.parent.height -\r\n                dims.parent.padding.top -\r\n                dims.parent.padding.bottom -\r\n                dims.parent.border.top -\r\n                dims.parent.border.bottom\r\n        };\r\n        // Adjust the clientX/clientY to ignore the area\r\n        // outside the effective area\r\n        var clientX = point.clientX -\r\n            dims.parent.left -\r\n            dims.parent.padding.left -\r\n            dims.parent.border.left -\r\n            dims.elem.margin.left;\r\n        var clientY = point.clientY -\r\n            dims.parent.top -\r\n            dims.parent.padding.top -\r\n            dims.parent.border.top -\r\n            dims.elem.margin.top;\r\n        // Adjust the clientX/clientY for HTML elements,\r\n        // because they have a transform-origin of 50% 50%\r\n        if (!isSVG) {\r\n            clientX -= dims.elem.width / scale / 2;\r\n            clientY -= dims.elem.height / scale / 2;\r\n        }\r\n        // Convert the mouse point from it's position over the\r\n        // effective area before the scale to the position\r\n        // over the effective area after the scale.\r\n        var focal = {\r\n            x: (clientX / effectiveArea.width) * (effectiveArea.width * toScale),\r\n            y: (clientY / effectiveArea.height) * (effectiveArea.height * toScale)\r\n        };\r\n        return zoom(toScale, __assign(__assign({ animate: false }, zoomOptions), { focal: focal }));\r\n    }\r\n    function zoomWithWheel(event, zoomOptions) {\r\n        // Need to prevent the default here\r\n        // or it conflicts with regular page scroll\r\n        event.preventDefault();\r\n        var opts = __assign(__assign({}, options), zoomOptions);\r\n        // Normalize to deltaX in case shift modifier is used on Mac\r\n        var delta = event.deltaY === 0 && event.deltaX ? event.deltaX : event.deltaY;\r\n        var wheel = delta < 0 ? 1 : -1;\r\n        var toScale = constrainScale(scale * Math.exp((wheel * opts.step) / 3), opts).scale;\r\n        return zoomToPoint(toScale, event, opts);\r\n    }\r\n    function reset(resetOptions) {\r\n        var opts = __assign(__assign(__assign({}, options), { animate: true, force: true }), resetOptions);\r\n        scale = constrainScale(opts.startScale, opts).scale;\r\n        var panResult = constrainXY(opts.startX, opts.startY, scale, opts);\r\n        x = panResult.x;\r\n        y = panResult.y;\r\n        return setTransformWithEvent('panzoomreset', opts);\r\n    }\r\n    var origX;\r\n    var origY;\r\n    var startClientX;\r\n    var startClientY;\r\n    var startScale;\r\n    var startDistance;\r\n    var pointers = [];\r\n    function handleDown(event) {\r\n        // Don't handle this event if the target is excluded\r\n        if (isExcluded(event.target, options)) {\r\n            return;\r\n        }\r\n        addPointer(pointers, event);\r\n        isPanning = true;\r\n        options.handleStartEvent(event);\r\n        origX = x;\r\n        origY = y;\r\n        trigger('panzoomstart', { x: x, y: y, scale: scale }, options);\r\n        // This works whether there are multiple\r\n        // pointers or not\r\n        var point = getMiddle(pointers);\r\n        startClientX = point.clientX;\r\n        startClientY = point.clientY;\r\n        startScale = scale;\r\n        startDistance = getDistance(pointers);\r\n    }\r\n    function move(event) {\r\n        if (!isPanning ||\r\n            origX === undefined ||\r\n            origY === undefined ||\r\n            startClientX === undefined ||\r\n            startClientY === undefined) {\r\n            return;\r\n        }\r\n        addPointer(pointers, event);\r\n        var current = getMiddle(pointers);\r\n        if (pointers.length > 1) {\r\n            // Use the distance between the first 2 pointers\r\n            // to determine the current scale\r\n            var diff = getDistance(pointers) - startDistance;\r\n            var toScale = constrainScale((diff * options.step) / 80 + startScale).scale;\r\n            zoomToPoint(toScale, current);\r\n        }\r\n        pan(origX + (current.clientX - startClientX) / scale, origY + (current.clientY - startClientY) / scale, {\r\n            animate: false\r\n        });\r\n    }\r\n    function handleUp(event) {\r\n        // Don't call panzoomend when panning with 2 touches\r\n        // until both touches end\r\n        if (pointers.length === 1) {\r\n            trigger('panzoomend', { x: x, y: y, scale: scale }, options);\r\n        }\r\n        // Note: don't remove all pointers\r\n        // Can restart without having to reinitiate all of them\r\n        // Remove the pointer regardless of the isPanning state\r\n        removePointer(pointers, event);\r\n        if (!isPanning) {\r\n            return;\r\n        }\r\n        isPanning = false;\r\n        origX = origY = startClientX = startClientY = undefined;\r\n    }\r\n    var bound = false;\r\n    function bind() {\r\n        if (bound) {\r\n            return;\r\n        }\r\n        bound = true;\r\n        onPointer('down', options.canvas ? parent : elem, handleDown);\r\n        onPointer('move', document, move, { passive: true });\r\n        onPointer('up', document, handleUp, { passive: true });\r\n    }\r\n    function destroy() {\r\n        bound = false;\r\n        destroyPointer('down', options.canvas ? parent : elem, handleDown);\r\n        destroyPointer('move', document, move);\r\n        destroyPointer('up', document, handleUp);\r\n    }\r\n    if (!options.noBind) {\r\n        bind();\r\n    }\r\n    return {\r\n        bind: bind,\r\n        destroy: destroy,\r\n        eventNames: events,\r\n        getPan: function () { return ({ x: x, y: y }); },\r\n        getScale: function () { return scale; },\r\n        getOptions: function () { return shallowClone(options); },\r\n        pan: pan,\r\n        reset: reset,\r\n        setOptions: setOptions,\r\n        setStyle: function (name, value) { return setStyle(elem, name, value); },\r\n        zoom: zoom,\r\n        zoomIn: zoomIn,\r\n        zoomOut: zoomOut,\r\n        zoomToPoint: zoomToPoint,\r\n        zoomWithWheel: zoomWithWheel\r\n    };\r\n}\r\nPanzoom.defaultOptions = defaultOptions;\r\n/* harmony default export */ var panzoom = __webpack_exports__[\"a\"] = (Panzoom);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n"
    )
  },
  ,
  ,
  function (module, __webpack_exports__, __webpack_require__) {
    'use strict'
    eval(
      "__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_panzoom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\r\nconsole.log('This is a demo version of Panzoom for testing.');\r\nconsole.log('It exposes a global (window.Panzoom) and should not be used in production.');\r\nwindow.Panzoom = _src_panzoom__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"];\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vL2dsb2JhbC1wYW56b29tLnRzPzdiODAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFvQztBQUVwQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdEQUFnRCxDQUFDO0FBQzdELE9BQU8sQ0FBQyxHQUFHLENBQUMsNEVBQTRFLENBQUM7QUFPekYsTUFBTSxDQUFDLE9BQU8sR0FBRyw0REFBTyIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhbnpvb20gZnJvbSAnLi4vc3JjL3Bhbnpvb20nXG5cbmNvbnNvbGUubG9nKCdUaGlzIGlzIGEgZGVtbyB2ZXJzaW9uIG9mIFBhbnpvb20gZm9yIHRlc3RpbmcuJylcbmNvbnNvbGUubG9nKCdJdCBleHBvc2VzIGEgZ2xvYmFsICh3aW5kb3cuUGFuem9vbSkgYW5kIHNob3VsZCBub3QgYmUgdXNlZCBpbiBwcm9kdWN0aW9uLicpXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgUGFuem9vbTogdHlwZW9mIFBhbnpvb21cbiAgfVxufVxud2luZG93LlBhbnpvb20gPSBQYW56b29tXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n"
    )
  },
  function (module, exports) {
    eval(
      "/* eslint-disable no-var */\nif (typeof window !== 'undefined') {\n  // Support: IE11 only\n  if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach\n  }\n  // Support: IE11 only\n  // CustomEvent is an object instead of a constructor\n  if (typeof window.CustomEvent !== 'function') {\n    window.CustomEvent = function CustomEvent(event, params) {\n      params = params || { bubbles: false, cancelable: false, detail: null }\n      var evt = document.createEvent('CustomEvent')\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n      return evt\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcG9seWZpbGxzLmpzPzA2NzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAvLyBTdXBwb3J0OiBJRTExIG9ubHlcbiAgaWYgKHdpbmRvdy5Ob2RlTGlzdCAmJiAhTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcbiAgICBOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCA9IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoXG4gIH1cbiAgLy8gU3VwcG9ydDogSUUxMSBvbmx5XG4gIC8vIEN1c3RvbUV2ZW50IGlzIGFuIG9iamVjdCBpbnN0ZWFkIG9mIGEgY29uc3RydWN0b3JcbiAgaWYgKHR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQgIT09ICdmdW5jdGlvbicpIHtcbiAgICB3aW5kb3cuQ3VzdG9tRXZlbnQgPSBmdW5jdGlvbiBDdXN0b21FdmVudChldmVudCwgcGFyYW1zKSB7XG4gICAgICBwYXJhbXMgPSBwYXJhbXMgfHwgeyBidWJibGVzOiBmYWxzZSwgY2FuY2VsYWJsZTogZmFsc2UsIGRldGFpbDogbnVsbCB9XG4gICAgICB2YXIgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50JylcbiAgICAgIGV2dC5pbml0Q3VzdG9tRXZlbnQoZXZlbnQsIHBhcmFtcy5idWJibGVzLCBwYXJhbXMuY2FuY2VsYWJsZSwgcGFyYW1zLmRldGFpbClcbiAgICAgIHJldHVybiBldnRcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n"
    )
  }
])
